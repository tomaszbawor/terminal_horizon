name: Release Trigger

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (without v prefix)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Update version in Cargo.toml
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" Cargo.toml
          git add Cargo.toml

      - name: Commit and push changes
        run: |
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
          git push origin HEAD:master

      - name: Run tests
        run: |
          # Install Rust
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source "$HOME/.cargo/env"
          
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y libncurses-dev
          
          # Run tests
          cargo fmt --all -- --check
          cargo clippy -- -D warnings
          cargo test

  build-and-release:
    name: Build and Release
    needs: prepare-release
    uses: ./.github/workflows/shared-config.yml
    with:
      version: ${{ github.event.inputs.version }}
      is-tag-release: false

  create-tag:
    name: Create Tag
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master # Get the latest changes including the version bump

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create and push tag
        run: |
          git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
#          git push origin "v${{ github.event.inputs.version }}"